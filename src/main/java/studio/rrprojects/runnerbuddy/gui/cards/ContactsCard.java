package studio.rrprojects.runnerbuddy.gui.cards;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import studio.rrprojects.runnerbuddy.containers.character.CharacterContainer;
import studio.rrprojects.runnerbuddy.containers.contacts.ContactContainer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class ContactsCard {
    CharacterContainer character;
    private JButton buttonNew;
    private JTextField textName;
    private JTextField textOccupation;
    private JButton buttonDelete;
    private JList<String> listContacts;
    private JPanel panelMain;
    private JTextArea textLevelBonus;
    private JLabel labelLevel;
    private JComboBox<String> boxLevel;
    private JTextArea notesArea;
    private JButton buttonSaveContact;
    private ContactContainer selectedContact;

    public ContactsCard(CharacterContainer characterContainer) {
        character = characterContainer;
        selectedContact = null;

        UpdateAll();
        buttonNew.addActionListener(actionEvent -> {
            CreateNewContact();
        });
        buttonDelete.addActionListener(actionEvent -> {
            DeleteContact();
        });
        textName.addActionListener(actionEvent -> {
            UpdateAll();
        });
        textOccupation.addActionListener(actionEvent -> {
            UpdateAll();
        });
        listContacts.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                JList list = (JList) e.getSource();

                SelectContact(list.getSelectedValue().toString());
            }
        });
        boxLevel.addActionListener(actionEvent -> {
            UpdateLevel();
        });
        buttonSaveContact.addActionListener(actionEvent -> {
            UpdateAll();
        });
    }

    private void UpdateLevel() {
        boxLevel.setEnabled(!selectedContact.isFree());
        selectedContact.setContactLevel(boxLevel.getSelectedIndex() + 1);
        textLevelBonus.setText(selectedContact.getContactLevelBonus());
    }

    private void SelectContact(String searchTerm) {
        ContactContainer tmp = character.getContactsController().getContact(searchTerm);
        if (tmp != null) {
            selectedContact = tmp;
            System.out.println("BEFORE ANYTHING ELSE:" + selectedContact.getContactNotes());
            PopulateFields();
        }
    }

    private void PopulateFields() {

        textName.setText(selectedContact.getContactName());
        textOccupation.setText(selectedContact.getContactOccupation());
        boxLevel.setSelectedIndex(selectedContact.getContactLevel() - 1);
        notesArea.setText(selectedContact.getContactNotes());
    }

    private void DeleteContact() {
        character.getContactsController().DeleteContact(selectedContact);
        SelectContact(character.getContactsController().getLastContact());
        UpdateAll();
    }

    private void CreateNewContact() {
        character.getContactsController().addNewContact();
        //selectedContact = newChar;
        UpdateAll();
    }

    private void UpdateAll() {
        UpdateSelectedContact();
        UpdateContactList();
        UpdateNotes();
    }

    private void UpdateSelectedContact() {
        if (selectedContact == null) {
            return;
        }

        selectedContact.setContactName(textName.getText());
        selectedContact.setContactOccupation(textOccupation.getText());

        //selectedContact.setContactNotes(notesArea.getText());
    }

    private void UpdateNotes() {
        if (selectedContact == null) {
            return;
        }

        String notes = notesArea.getText();
        selectedContact.setContactNotes(notes);
    }

    private void UpdateContactList() {
        listContacts.setModel(character.getContactsController().getList());
    }

    public JPanel getPanel() {
        return panelMain;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        panelMain.setLayout(new GridLayoutManager(6, 4, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.setBackground(new Color(-14079180));
        panelMain.setForeground(new Color(-11805347));
        final JScrollPane scrollPane1 = new JScrollPane();
        panelMain.add(scrollPane1, new GridConstraints(1, 0, 5, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-14079180));
        panel1.setForeground(new Color(-11805347));
        scrollPane1.setViewportView(panel1);
        listContacts = new JList();
        listContacts.setBackground(new Color(-14079180));
        listContacts.setForeground(new Color(-11805347));
        panel1.add(listContacts, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(250, 50), null, 0, false));
        buttonNew = new JButton();
        buttonNew.setBackground(new Color(-14079180));
        buttonNew.setForeground(new Color(-11805347));
        buttonNew.setText("Add New Contact");
        panelMain.add(buttonNew, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textName = new JTextField();
        textName.setBackground(new Color(-13487043));
        textName.setCaretColor(new Color(-11805347));
        textName.setForeground(new Color(-11805347));
        panelMain.add(textName, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        labelLevel = new JLabel();
        labelLevel.setForeground(new Color(-11805347));
        labelLevel.setText("Level");
        panelMain.add(labelLevel, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textOccupation = new JTextField();
        textOccupation.setBackground(new Color(-13487043));
        textOccupation.setCaretColor(new Color(-11805347));
        textOccupation.setForeground(new Color(-11805347));
        panelMain.add(textOccupation, new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        buttonDelete = new JButton();
        buttonDelete.setBackground(new Color(-14079180));
        buttonDelete.setForeground(new Color(-11805347));
        buttonDelete.setText("Delete Contact");
        panelMain.add(buttonDelete, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textLevelBonus = new JTextArea();
        textLevelBonus.setBackground(new Color(-13487043));
        textLevelBonus.setCaretColor(new Color(-11805347));
        textLevelBonus.setForeground(new Color(-11805347));
        textLevelBonus.setLineWrap(true);
        textLevelBonus.setWrapStyleWord(true);
        panelMain.add(textLevelBonus, new GridConstraints(3, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        boxLevel = new JComboBox();
        boxLevel.setBackground(new Color(-14079180));
        boxLevel.setForeground(new Color(-11805347));
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("1");
        defaultComboBoxModel1.addElement("2");
        defaultComboBoxModel1.addElement("3");
        boxLevel.setModel(defaultComboBoxModel1);
        panelMain.add(boxLevel, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setForeground(new Color(-11805347));
        label1.setText("Occupation");
        panelMain.add(label1, new GridConstraints(2, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setForeground(new Color(-11805347));
        label2.setText("Notes:");
        panelMain.add(label2, new GridConstraints(4, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setForeground(new Color(-11805347));
        label3.setText("Name");
        panelMain.add(label3, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        notesArea = new JTextArea();
        notesArea.setBackground(new Color(-13487043));
        notesArea.setCaretColor(new Color(-11805347));
        notesArea.setForeground(new Color(-11805347));
        notesArea.setLineWrap(true);
        notesArea.setWrapStyleWord(true);
        panelMain.add(notesArea, new GridConstraints(4, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        buttonSaveContact = new JButton();
        buttonSaveContact.setBackground(new Color(-14079180));
        buttonSaveContact.setForeground(new Color(-11805347));
        buttonSaveContact.setText("Save Contact");
        panelMain.add(buttonSaveContact, new GridConstraints(5, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

}
