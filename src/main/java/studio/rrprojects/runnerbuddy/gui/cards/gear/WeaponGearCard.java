package studio.rrprojects.runnerbuddy.gui.cards.gear;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import studio.rrprojects.runnerbuddy.containers.items.WeaponItem;
import studio.rrprojects.runnerbuddy.gui.cards.Card;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

public class WeaponGearCard extends Card {
    private JPanel panelMain;
    private JTextArea areaDisplayText;

    public WeaponGearCard(String title) {
        super(title);
        setPanel(panelMain);
    }

    @Override
    public void Initialize() {
        super.Initialize();
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        panelMain.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        areaDisplayText = new JTextArea();
        areaDisplayText.setLineWrap(true);
        areaDisplayText.setWrapStyleWord(true);
        panelMain.add(areaDisplayText, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

    @Override
    public void Update() {
        super.Update();
        String displayString = "";

        ArrayList<WeaponItem> weaponList = null;

        try {
            weaponList = getCharacterContainer().getResourceController().getWeaponList();
        } catch (NullPointerException e) {
        }

        for (WeaponItem weapon : weaponList) {
            displayString += weapon + "\n";
        }

        areaDisplayText.setText(displayString);
    }
}
