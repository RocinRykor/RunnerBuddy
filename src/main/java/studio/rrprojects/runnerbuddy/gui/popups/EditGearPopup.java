package studio.rrprojects.runnerbuddy.gui.popups;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import studio.rrprojects.runnerbuddy.containers.character.CharacterContainer;
import studio.rrprojects.runnerbuddy.containers.gear.GearContainer;
import studio.rrprojects.runnerbuddy.gui.cards.GearCard;

import javax.swing.*;
import java.awt.*;
import java.util.Map;

public class EditGearPopup {
    private GearCard gearCard;
    private CharacterContainer character;
    private GearContainer gear;
    private JTextPane textDescription;
    private JButton buttonCancel;
    private JButton buttonSubmit;
    private JPanel panelMain;

    public EditGearPopup(GearContainer baseGear, CharacterContainer character, GearCard gearCard) {
        gear = baseGear;
        this.character = character;
        this.gearCard = gearCard;

        PopulateDescription();

        JFrame frame = new JFrame();
        frame.setContentPane(panelMain);
        frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
        frame.pack();
    }

    private void PopulateDescription() {
        String descriptionBody = "";
        /*
        for (Map.Entry<String, Object> stat : gear.getItemStats().entrySet()) {
            if (!stat.getValue().toString().equalsIgnoreCase("Unknown") && !stat.getValue().toString().equalsIgnoreCase("-1")) {
                descriptionBody += stat.getKey() + ": " + stat.getValue().toString() + "\n\n";
            }

            textDescription.setText(descriptionBody);
        }
         */

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        panelMain.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.setBackground(new Color(-14079180));
        textDescription = new JTextPane();
        textDescription.setBackground(new Color(-14079180));
        textDescription.setForeground(new Color(-11805347));
        panelMain.add(textDescription, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        buttonSubmit = new JButton();
        buttonSubmit.setBackground(new Color(-14079180));
        buttonSubmit.setForeground(new Color(-11805347));
        buttonSubmit.setText("Submit");
        panelMain.add(buttonSubmit, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonCancel = new JButton();
        buttonCancel.setBackground(new Color(-14079180));
        buttonCancel.setForeground(new Color(-11805347));
        buttonCancel.setText("Cancel");
        panelMain.add(buttonCancel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panelMain.add(spacer1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

}
